{ pkgs, lib, config, ... }: {
  options.hostOptions.dconf.background = with lib; {
    path = mkOption {
      type = types.nullOr types.pathInStore;
      default = null;
      description = "The path to the background image to use";
    };

    adjustment = mkOption {
      type = types.enum [ "zoom" ];
      default = "zoom";
      description = "The adjustment to apply if the image doesn't fit the resolution";
    };
  };

  config =
    let
      user = config.hostOptions.user;
      cfg = config.hostOptions.dconf;
    in
    {
      # Enable managing dconf with NixOS and home-manager
      programs.dconf.enable = true;

      home-manager.users.${user} = {
        imports = [
          ./settings.nix # Settings generated by dconf2nix
        ];

        dconf.settings = lib.mkIf (cfg.background.path != null) {
          "org/gnome/desktop/background" = {
            picture-options = cfg.background.adjustment;
            picture-uri = "${cfg.background.path}";
            picture-uri-dark = "${cfg.background.path}";
          };

          "org/gnome/desktop/screensaver" = {
            picture-options = cfg.background.adjustment;
            picture-uri = "${cfg.background.path}";
          };
        };

        home.packages = with pkgs; [
          dconf-editor # GUI for editing dconf entries
          dconf2nix # Convert dconf files to Nix files
        ];
      };
    };
}
