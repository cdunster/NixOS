# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4398a044-8dc4-4a92-b786-57f618f5207d";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-fd361c97-37b4-4db3-a0e8-154c350cde8e".device = "/dev/disk/by-uuid/fd361c97-37b4-4db3-a0e8-154c350cde8e";
  boot.initrd.luks.devices."luks-30e30380-61ff-4b4b-baa6-87885fe8fbdf".device = "/dev/disk/by-uuid/30e30380-61ff-4b4b-baa6-87885fe8fbdf";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/BE9D-ABD0";
    fsType = "vfat";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/e0beedfa-b971-4176-acdc-8394b742ec51"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
